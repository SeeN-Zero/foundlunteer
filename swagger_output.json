{
  "swagger": "2.0",
  "info": {
    "version": "2.1.1",
    "title": "FOUNDLUNTEER API",
    "description": "v2.0.0\n-Change Database Relation\n\nv2.1.1\n-Add Forgot Password Feature\n-Fix Error Send Email\n\nv2.2.0\n-Add Barier for download CV\n-Fix Forgot Password Bug"
  },
  "host": "aws.senna-annaba.my.id",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "For Organization or Individual"
    },
    {
      "name": "Individual"
    },
    {
      "name": "Organization"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter the token with the Bearer: bearer [token]"
    }
  },
  "paths": {
    "/user/add": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "Add New User",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "name",
                "address",
                "phone",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login For User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "Login For User",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/get": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Profile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/getall": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get All Job With Query Example : {/job/getall?limit=2&page=2&title=konser}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Maximum items for each page"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "Show page"
          },
          {
            "in": "query",
            "name": "title",
            "type": "string",
            "description": "Search Job By Title"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/get/{jobId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get One Job By Id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/image": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add Individual or Organization Image Profile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "image",
            "description": "jpg/jpeg/png",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/file": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add Individual or Organization Image Profile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "cv",
            "description": "pdf",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "ijazah",
            "description": "pdf",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "sertifikat",
            "description": "pdf",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/getimage": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Image (Param Optional dont fill to get owner file)",
        "produces": [
          "image/png"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getimage/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Image (Param Optional dont fill to get owner file(use endpoint above))",
        "produces": [
          "image/png"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "User Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getcv/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Cv (Param Optional dont fill to get owner file)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getcv/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Cv (Param Optional dont fill to get owner file(use endpoint above)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "User Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getijazah/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Ijazah (Param Optional dont fill to get owner file)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getijazah/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Ijazah (Param Optional dont fill to get owner file(use endpoint above)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "User Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getsertifikat/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Sertifikat (Param Optional dont fill to get owner file)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/getsertifikat/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Sertifikat (Param Optional dont fill to get owner file(use endpoint above)",
        "produces": [
          "application/pdf"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "User Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/sendcode": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send Email Forgot Password Code ",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "Change Password",
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/forgotpassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change Password Use Code",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "Change Password",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "code",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/user/changepassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change Password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "Change Password",
            "schema": {
              "type": "object",
              "required": [
                "password"
              ],
              "properties": {
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          }
        }
      }
    },
    "/individual/update": {
      "post": {
        "tags": [
          "Individual"
        ],
        "summary": "Update For Individual",
        "description": "All body request optional",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Individual",
            "description": "Add New Individual",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "age": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/individual/saveordeletejob/{jobId}": {
      "post": {
        "tags": [
          "Individual"
        ],
        "summary": "Add or Remove Job Form Individual Job Save List",
        "description": "when the individual wants to save (bookmark) a job based on the job id, the response will be \"saved\", when the individual hits again for the job that has been saved, the job will be deleted from the list and the response will be \"Deleted\"",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/individual/savedjob": {
      "get": {
        "tags": [
          "Individual"
        ],
        "summary": "Get Individual Saved Job",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/individual/register/{jobId}": {
      "post": {
        "tags": [
          "Individual"
        ],
        "summary": "Register Job For Individual",
        "description": "Only individuals with complete data can register.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/individual/registeredjob": {
      "get": {
        "tags": [
          "Individual"
        ],
        "summary": "Get Individual Registered Job And Process",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/organization/update": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Update For Organization",
        "description": "All body request optional",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Individual",
            "description": "Add New Individual",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "leader": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/organization/getjob": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Organization Job",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/organization/jobdetail/{jobId}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Organization Job Detail With Registrant",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Try it out for response"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/add": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Add Job By Organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Job",
            "description": "Add New Job",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/update/{jobId}": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Update Job By Organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          },
          {
            "in": "body",
            "name": "Job",
            "description": "Update Job",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/delete/{jobId}": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete Job By Organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "type": "string",
            "required": true,
            "description": "Job UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
